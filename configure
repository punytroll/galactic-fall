#! /bin/bash

configure_CXXFLAGS=""
write_CXXFLAGS="no"
configure_LDFLAGS=""
write_LDFLAGS="no"
write_all="no"

# if --help command line argument is given, display which variables may be set with this configuration file
if [ "$1" = "--help" ]; then
	echo "CXXFLAGS = "
	echo "LDFLAGS = "
	exit 1
fi

# create this whatever we do and write all sub files
if [ ! -d .configuration.d ]; then
	mkdir .configuration.d
	write_all="yes"
fi

# if no arguments are given, cat the configuration file and exit
if [ $# -eq 0 -a -e "configuration" -a "configuration" -nt "configure" ]; then
	cat configuration
	configuration_files=`ls .configuration.d`
	for configuration_file in ${configuration_files}; do
		echo "========================================"
		echo .configuration.d/${configuration_file}
		echo "----------------------------------------"
		cat .configuration.d/${configuration_file}
	done
	exit 0
fi

# this function unifies the string sets $1 and $2 without repetition and puts the result in $result
function unify
{
	local IFS=" "
	result=$1
	for word in $2; do
		for test_word in $1; do
			if [ "${word}" = "${test_word}" ]; then
				continue 2
			fi
		done
		result="${result} ${word}"
	done
}

# this function removes all strings in the string set $2 from the string set $1 and puts the result in $result
function subtract
{
	local IFS=" "
	result=""
	for word in ${1}; do
		for test_word in ${2}; do
			if [ "${word}" = "${test_word}" ]; then
				continue 2
			fi
		done
		result="${result} ${word}"
	done
}

# read the "configuration" files and initialize variables with the values from the files
if [ -d .configuration.d ]; then
	configuration_files=`ls .configuration.d`
	for configuration_file in ${configuration_files}; do
		configuration=`cat .configuration.d/${configuration_file}`
		IFS='
'
		for configuration_line in ${configuration}; do
			if [ -n "${configuration_line}" ]; then
				case ${configuration_line} in
				"CXXFLAGS = "*)
					configure_CXXFLAGS=`echo ${configuration_line} | sed -e 's/^CXXFLAGS = //'`
					;;
				"LDFLAGS = "*)
					configure_LDFLAGS=`echo ${configuration_line} | sed -e 's/^LDFLAGS = //'`
					;;
				esac
			fi
		done
	done
fi

# process the options from the command line
for option in "$@"; do
	case ${option} in
	CXXFLAGS=*)
		configure_CXXFLAGS=`echo ${option} | sed -e 's/^CXXFLAGS=//'`
		write_CXXFLAGS="yes"
		;;
	CXXFLAGS+=*)
		add_CXXFLAGS=`echo ${option} | sed -e 's/^CXXFLAGS+=//'`
		unify "${configure_CXXFLAGS}" "${add_CXXFLAGS}"
		configure_CXXFLAGS=${result}
		write_CXXFLAGS="yes"
		;;
	CXXFLAGS-=*)
		subtract_CXXFLAGS=`echo ${option} | sed -e 's/^CXXFLAGS-=//'`
		subtract "${configure_CXXFLAGS}" "${subtract_CXXFLAGS}"
		configure_CXXFLAGS=${result}
		write_CXXFLAGS="yes"
		;;
	LDFLAGS=*)
		configure_LDFLAGS=`echo ${option} | sed -e 's/^LDFLAGS=//'`
		write_LDFLAGS="yes"
		;;
	LDFLAGS+=*)
		add_LDFLAGS=`echo ${option} | sed -e 's/^LDFLAGS+=//'`
		unify "${configure_LDFLAGS}" "${add_LDFLAGS}"
		configure_LDFLAGS=${result}
		write_LDFLAGS="yes"
		;;
	LDFLAGS-=*)
		subtract_LDFLAGS=`echo ${option} | sed -e 's/^LDFLAGS-=//'`
		subtract "${configure_LDFLAGS}" "${subtract_LDFLAGS}"
		configure_LDFLAGS=${result}
		write_LDFLAGS="yes"
		;;
	esac
done

# write the configuration files
if [ "${write_CXXFLAGS}" = "yes" -o "${write_all}" = "yes" ]; then
	echo '# configuration generated by configure and read by Makefile' > .configuration.d/CXXFLAGS
	echo 'CXXFLAGS_configuration = $(root)/.configuration.d/CXXFLAGS' >> .configuration.d/CXXFLAGS
	echo "CXXFLAGS = ${configure_CXXFLAGS}" >> .configuration.d/CXXFLAGS
	echo >> .configuration.d/CXXFLAGS
fi

if [ "${write_LDFLAGS}" = "yes" -o "${write_all}" = "yes" ]; then
	echo '# configuration generated by configure and read by Makefile' > .configuration.d/LDFLAGS
	echo 'LDFLAGS_configuration = $(root)/.configuration.d/LDFLAGS' >> .configuration.d/LDFLAGS
	echo "LDFLAGS = ${configure_LDFLAGS}" >> .configuration.d/LDFLAGS
	echo >> .configuration.d/LDFLAGS
fi

echo "# configuration generated by configure and read by Makefile" > configuration
echo >> configuration
echo 'include ${root}/.configuration.d/CXXFLAGS' >> configuration
echo >> configuration
echo 'include ${root}/.configuration.d/LDFLAGS' >> configuration
echo >> configuration
