/**
 * galactic-fall
 * Copyright (C) 2007  Hagen MÃ¶bius
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
**/

#include <GL/gl.h>

#include "color.h"
#include "game_time.h"
#include "math.h"
#include "particle_systems.h"

GLubyte g_ParticleTextureData[4096] = 
	{
		
		
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 7, 255, 255, 255, 11, 255, 255, 255, 14, 255, 255, 255, 16, 255, 255, 255, 16, 255, 255, 255, 16, 255, 255, 255, 14, 255, 255, 255, 11, 255, 255, 255, 7, 255, 255, 255, 2, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 3, 255, 255, 255, 11, 255, 255, 255, 18, 255, 255, 255, 23, 255, 255, 255, 28, 255, 255, 255, 31, 255, 255, 255, 33, 255, 255, 255, 33, 255, 255, 255, 33, 255, 255, 255, 31, 255, 255, 255, 28, 255, 255, 255, 23, 255, 255, 255, 18, 255, 255, 255, 11, 255, 255, 255, 3, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 9, 255, 255, 255, 18, 255, 255, 255, 26, 255, 255, 255, 33, 255, 255, 255, 39, 255, 255, 255, 44, 255, 255, 255, 48, 255, 255, 255, 50, 255, 255, 255, 50, 255, 255, 255, 50, 255, 255, 255, 48, 255, 255, 255, 44, 255, 255, 255, 39, 255, 255, 255, 33, 255, 255, 255, 26, 255, 255, 255, 18, 255, 255, 255, 9, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 13, 255, 255, 255, 23, 255, 255, 255, 33, 255, 255, 255, 41, 255, 255, 255, 49, 255, 255, 255, 56, 255, 255, 255, 61, 255, 255, 255, 64, 255, 255, 255, 67, 255, 255, 255, 68, 255, 255, 255, 67, 255, 255, 255, 64, 255, 255, 255, 61, 255, 255, 255, 56, 255, 255, 255, 49, 255, 255, 255, 41, 255, 255, 255, 33, 255, 255, 255, 23, 255, 255, 255, 13, 255, 255, 255, 2, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 14, 255, 255, 255, 26, 255, 255, 255, 37, 255, 255, 255, 47, 255, 255, 255, 56, 255, 255, 255, 64, 255, 255, 255, 71, 255, 255, 255, 77, 255, 255, 255, 81, 255, 255, 255, 84, 255, 255, 255, 85, 255, 255, 255, 84, 255, 255, 255, 81, 255, 255, 255, 77, 255, 255, 255, 71, 255, 255, 255, 64, 255, 255, 255, 56, 255, 255, 255, 47, 255, 255, 255, 37, 255, 255, 255, 26, 255, 255, 255, 14, 255, 255, 255, 2, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 13, 255, 255, 255, 26, 255, 255, 255, 38, 255, 255, 255, 50, 255, 255, 255, 61, 255, 255, 255, 71, 255, 255, 255, 79, 255, 255, 255, 87, 255, 255, 255, 93, 255, 255, 255, 98, 255, 255, 255, 101, 255, 255, 255, 102, 255, 255, 255, 101, 255, 255, 255, 98, 255, 255, 255, 93, 255, 255, 255, 87, 255, 255, 255, 79, 255, 255, 255, 71, 255, 255, 255, 61, 255, 255, 255, 50, 255, 255, 255, 38, 255, 255, 255, 26, 255, 255, 255, 13, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 9, 255, 255, 255, 23, 255, 255, 255, 37, 255, 255, 255, 50, 255, 255, 255, 62, 255, 255, 255, 74, 255, 255, 255, 85, 255, 255, 255, 94, 255, 255, 255, 102, 255, 255, 255, 109, 255, 255, 255, 114, 255, 255, 255, 117, 255, 255, 255, 119, 255, 255, 255, 117, 255, 255, 255, 114, 255, 255, 255, 109, 255, 255, 255, 102, 255, 255, 255, 94, 255, 255, 255, 85, 255, 255, 255, 74, 255, 255, 255, 62, 255, 255, 255, 50, 255, 255, 255, 37, 255, 255, 255, 23, 255, 255, 255, 9, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 3, 255, 255, 255, 18, 255, 255, 255, 33, 255, 255, 255, 47, 255, 255, 255, 61, 255, 255, 255, 74, 255, 255, 255, 86, 255, 255, 255, 98, 255, 255, 255, 108, 255, 255, 255, 117, 255, 255, 255, 125, 255, 255, 255, 131, 255, 255, 255, 134, 255, 255, 255, 136, 255, 255, 255, 134, 255, 255, 255, 131, 255, 255, 255, 125, 255, 255, 255, 117, 255, 255, 255, 108, 255, 255, 255, 98, 255, 255, 255, 86, 255, 255, 255, 74, 255, 255, 255, 61, 255, 255, 255, 47, 255, 255, 255, 33, 255, 255, 255, 18, 255, 255, 255, 3, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 11, 255, 255, 255, 26, 255, 255, 255, 41, 255, 255, 255, 56, 255, 255, 255, 71, 255, 255, 255, 85, 255, 255, 255, 98, 255, 255, 255, 110, 255, 255, 255, 122, 255, 255, 255, 132, 255, 255, 255, 140, 255, 255, 255, 147, 255, 255, 255, 151, 255, 255, 255, 153, 255, 255, 255, 151, 255, 255, 255, 147, 255, 255, 255, 140, 255, 255, 255, 132, 255, 255, 255, 122, 255, 255, 255, 110, 255, 255, 255, 98, 255, 255, 255, 85, 255, 255, 255, 71, 255, 255, 255, 56, 255, 255, 255, 41, 255, 255, 255, 26, 255, 255, 255, 11, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 18, 255, 255, 255, 33, 255, 255, 255, 49, 255, 255, 255, 64, 255, 255, 255, 79, 255, 255, 255, 94, 255, 255, 255, 108, 255, 255, 255, 122, 255, 255, 255, 134, 255, 255, 255, 146, 255, 255, 255, 155, 255, 255, 255, 163, 255, 255, 255, 168, 255, 255, 255, 170, 255, 255, 255, 168, 255, 255, 255, 163, 255, 255, 255, 155, 255, 255, 255, 146, 255, 255, 255, 134, 255, 255, 255, 122, 255, 255, 255, 108, 255, 255, 255, 94, 255, 255, 255, 79, 255, 255, 255, 64, 255, 255, 255, 49, 255, 255, 255, 33, 255, 255, 255, 18, 255, 255, 255, 2, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 7, 255, 255, 255, 23, 255, 255, 255, 39, 255, 255, 255, 56, 255, 255, 255, 71, 255, 255, 255, 87, 255, 255, 255, 102, 255, 255, 255, 117, 255, 255, 255, 132, 255, 255, 255, 146, 255, 255, 255, 158, 255, 255, 255, 170, 255, 255, 255, 178, 255, 255, 255, 184, 255, 255, 255, 187, 255, 255, 255, 184, 255, 255, 255, 178, 255, 255, 255, 170, 255, 255, 255, 158, 255, 255, 255, 146, 255, 255, 255, 132, 255, 255, 255, 117, 255, 255, 255, 102, 255, 255, 255, 87, 255, 255, 255, 71, 255, 255, 255, 56, 255, 255, 255, 39, 255, 255, 255, 23, 255, 255, 255, 7, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 11, 255, 255, 255, 28, 255, 255, 255, 44, 255, 255, 255, 61, 255, 255, 255, 77, 255, 255, 255, 93, 255, 255, 255, 109, 255, 255, 255, 125, 255, 255, 255, 140, 255, 255, 255, 155, 255, 255, 255, 170, 255, 255, 255, 182, 255, 255, 255, 193, 255, 255, 255, 201, 255, 255, 255, 204, 255, 255, 255, 201, 255, 255, 255, 193, 255, 255, 255, 182, 255, 255, 255, 170, 255, 255, 255, 155, 255, 255, 255, 140, 255, 255, 255, 125, 255, 255, 255, 109, 255, 255, 255, 93, 255, 255, 255, 77, 255, 255, 255, 61, 255, 255, 255, 44, 255, 255, 255, 28, 255, 255, 255, 11, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 14, 255, 255, 255, 31, 255, 255, 255, 48, 255, 255, 255, 64, 255, 255, 255, 81, 255, 255, 255, 98, 255, 255, 255, 114, 255, 255, 255, 131, 255, 255, 255, 147, 255, 255, 255, 163, 255, 255, 255, 178, 255, 255, 255, 193, 255, 255, 255, 206, 255, 255, 255, 216, 255, 255, 255, 221, 255, 255, 255, 216, 255, 255, 255, 206, 255, 255, 255, 193, 255, 255, 255, 178, 255, 255, 255, 163, 255, 255, 255, 147, 255, 255, 255, 131, 255, 255, 255, 114, 255, 255, 255, 98, 255, 255, 255, 81, 255, 255, 255, 64, 255, 255, 255, 48, 255, 255, 255, 31, 255, 255, 255, 14, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 16, 255, 255, 255, 33, 255, 255, 255, 50, 255, 255, 255, 67, 255, 255, 255, 84, 255, 255, 255, 101, 255, 255, 255, 117, 255, 255, 255, 134, 255, 255, 255, 151, 255, 255, 255, 168, 255, 255, 255, 184, 255, 255, 255, 201, 255, 255, 255, 216, 255, 255, 255, 230, 255, 255, 255, 238, 255, 255, 255, 230, 255, 255, 255, 216, 255, 255, 255, 201, 255, 255, 255, 184, 255, 255, 255, 168, 255, 255, 255, 151, 255, 255, 255, 134, 255, 255, 255, 117, 255, 255, 255, 101, 255, 255, 255, 84, 255, 255, 255, 67, 255, 255, 255, 50, 255, 255, 255, 33, 255, 255, 255, 16, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 16, 255, 255, 255, 33, 255, 255, 255, 50, 255, 255, 255, 68, 255, 255, 255, 85, 255, 255, 255, 102, 255, 255, 255, 119, 255, 255, 255, 136, 255, 255, 255, 153, 255, 255, 255, 170, 255, 255, 255, 187, 255, 255, 255, 204, 255, 255, 255, 221, 255, 255, 255, 238, 255, 255, 255, 255, 255, 255, 255, 238, 255, 255, 255, 221, 255, 255, 255, 204, 255, 255, 255, 187, 255, 255, 255, 170, 255, 255, 255, 153, 255, 255, 255, 136, 255, 255, 255, 119, 255, 255, 255, 102, 255, 255, 255, 85, 255, 255, 255, 68, 255, 255, 255, 50, 255, 255, 255, 33, 255, 255, 255, 16, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 16, 255, 255, 255, 33, 255, 255, 255, 50, 255, 255, 255, 67, 255, 255, 255, 84, 255, 255, 255, 101, 255, 255, 255, 117, 255, 255, 255, 134, 255, 255, 255, 151, 255, 255, 255, 168, 255, 255, 255, 184, 255, 255, 255, 201, 255, 255, 255, 216, 255, 255, 255, 230, 255, 255, 255, 238, 255, 255, 255, 230, 255, 255, 255, 216, 255, 255, 255, 201, 255, 255, 255, 184, 255, 255, 255, 168, 255, 255, 255, 151, 255, 255, 255, 134, 255, 255, 255, 117, 255, 255, 255, 101, 255, 255, 255, 84, 255, 255, 255, 67, 255, 255, 255, 50, 255, 255, 255, 33, 255, 255, 255, 16, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 14, 255, 255, 255, 31, 255, 255, 255, 48, 255, 255, 255, 64, 255, 255, 255, 81, 255, 255, 255, 98, 255, 255, 255, 114, 255, 255, 255, 131, 255, 255, 255, 147, 255, 255, 255, 163, 255, 255, 255, 178, 255, 255, 255, 193, 255, 255, 255, 206, 255, 255, 255, 216, 255, 255, 255, 221, 255, 255, 255, 216, 255, 255, 255, 206, 255, 255, 255, 193, 255, 255, 255, 178, 255, 255, 255, 163, 255, 255, 255, 147, 255, 255, 255, 131, 255, 255, 255, 114, 255, 255, 255, 98, 255, 255, 255, 81, 255, 255, 255, 64, 255, 255, 255, 48, 255, 255, 255, 31, 255, 255, 255, 14, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 11, 255, 255, 255, 28, 255, 255, 255, 44, 255, 255, 255, 61, 255, 255, 255, 77, 255, 255, 255, 93, 255, 255, 255, 109, 255, 255, 255, 125, 255, 255, 255, 140, 255, 255, 255, 155, 255, 255, 255, 170, 255, 255, 255, 182, 255, 255, 255, 193, 255, 255, 255, 201, 255, 255, 255, 204, 255, 255, 255, 201, 255, 255, 255, 193, 255, 255, 255, 182, 255, 255, 255, 170, 255, 255, 255, 155, 255, 255, 255, 140, 255, 255, 255, 125, 255, 255, 255, 109, 255, 255, 255, 93, 255, 255, 255, 77, 255, 255, 255, 61, 255, 255, 255, 44, 255, 255, 255, 28, 255, 255, 255, 11, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 7, 255, 255, 255, 23, 255, 255, 255, 39, 255, 255, 255, 56, 255, 255, 255, 71, 255, 255, 255, 87, 255, 255, 255, 102, 255, 255, 255, 117, 255, 255, 255, 132, 255, 255, 255, 146, 255, 255, 255, 158, 255, 255, 255, 170, 255, 255, 255, 178, 255, 255, 255, 184, 255, 255, 255, 187, 255, 255, 255, 184, 255, 255, 255, 178, 255, 255, 255, 170, 255, 255, 255, 158, 255, 255, 255, 146, 255, 255, 255, 132, 255, 255, 255, 117, 255, 255, 255, 102, 255, 255, 255, 87, 255, 255, 255, 71, 255, 255, 255, 56, 255, 255, 255, 39, 255, 255, 255, 23, 255, 255, 255, 7, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 18, 255, 255, 255, 33, 255, 255, 255, 49, 255, 255, 255, 64, 255, 255, 255, 79, 255, 255, 255, 94, 255, 255, 255, 108, 255, 255, 255, 122, 255, 255, 255, 134, 255, 255, 255, 146, 255, 255, 255, 155, 255, 255, 255, 163, 255, 255, 255, 168, 255, 255, 255, 170, 255, 255, 255, 168, 255, 255, 255, 163, 255, 255, 255, 155, 255, 255, 255, 146, 255, 255, 255, 134, 255, 255, 255, 122, 255, 255, 255, 108, 255, 255, 255, 94, 255, 255, 255, 79, 255, 255, 255, 64, 255, 255, 255, 49, 255, 255, 255, 33, 255, 255, 255, 18, 255, 255, 255, 2, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 11, 255, 255, 255, 26, 255, 255, 255, 41, 255, 255, 255, 56, 255, 255, 255, 71, 255, 255, 255, 85, 255, 255, 255, 98, 255, 255, 255, 110, 255, 255, 255, 122, 255, 255, 255, 132, 255, 255, 255, 140, 255, 255, 255, 147, 255, 255, 255, 151, 255, 255, 255, 153, 255, 255, 255, 151, 255, 255, 255, 147, 255, 255, 255, 140, 255, 255, 255, 132, 255, 255, 255, 122, 255, 255, 255, 110, 255, 255, 255, 98, 255, 255, 255, 85, 255, 255, 255, 71, 255, 255, 255, 56, 255, 255, 255, 41, 255, 255, 255, 26, 255, 255, 255, 11, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 3, 255, 255, 255, 18, 255, 255, 255, 33, 255, 255, 255, 47, 255, 255, 255, 61, 255, 255, 255, 74, 255, 255, 255, 86, 255, 255, 255, 98, 255, 255, 255, 108, 255, 255, 255, 117, 255, 255, 255, 125, 255, 255, 255, 131, 255, 255, 255, 134, 255, 255, 255, 136, 255, 255, 255, 134, 255, 255, 255, 131, 255, 255, 255, 125, 255, 255, 255, 117, 255, 255, 255, 108, 255, 255, 255, 98, 255, 255, 255, 86, 255, 255, 255, 74, 255, 255, 255, 61, 255, 255, 255, 47, 255, 255, 255, 33, 255, 255, 255, 18, 255, 255, 255, 3, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 9, 255, 255, 255, 23, 255, 255, 255, 37, 255, 255, 255, 50, 255, 255, 255, 62, 255, 255, 255, 74, 255, 255, 255, 85, 255, 255, 255, 94, 255, 255, 255, 102, 255, 255, 255, 109, 255, 255, 255, 114, 255, 255, 255, 117, 255, 255, 255, 119, 255, 255, 255, 117, 255, 255, 255, 114, 255, 255, 255, 109, 255, 255, 255, 102, 255, 255, 255, 94, 255, 255, 255, 85, 255, 255, 255, 74, 255, 255, 255, 62, 255, 255, 255, 50, 255, 255, 255, 37, 255, 255, 255, 23, 255, 255, 255, 9, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 13, 255, 255, 255, 26, 255, 255, 255, 38, 255, 255, 255, 50, 255, 255, 255, 61, 255, 255, 255, 71, 255, 255, 255, 79, 255, 255, 255, 87, 255, 255, 255, 93, 255, 255, 255, 98, 255, 255, 255, 101, 255, 255, 255, 102, 255, 255, 255, 101, 255, 255, 255, 98, 255, 255, 255, 93, 255, 255, 255, 87, 255, 255, 255, 79, 255, 255, 255, 71, 255, 255, 255, 61, 255, 255, 255, 50, 255, 255, 255, 38, 255, 255, 255, 26, 255, 255, 255, 13, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 14, 255, 255, 255, 26, 255, 255, 255, 37, 255, 255, 255, 47, 255, 255, 255, 56, 255, 255, 255, 64, 255, 255, 255, 71, 255, 255, 255, 77, 255, 255, 255, 81, 255, 255, 255, 84, 255, 255, 255, 85, 255, 255, 255, 84, 255, 255, 255, 81, 255, 255, 255, 77, 255, 255, 255, 71, 255, 255, 255, 64, 255, 255, 255, 56, 255, 255, 255, 47, 255, 255, 255, 37, 255, 255, 255, 26, 255, 255, 255, 14, 255, 255, 255, 2, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 13, 255, 255, 255, 23, 255, 255, 255, 33, 255, 255, 255, 41, 255, 255, 255, 49, 255, 255, 255, 56, 255, 255, 255, 61, 255, 255, 255, 64, 255, 255, 255, 67, 255, 255, 255, 68, 255, 255, 255, 67, 255, 255, 255, 64, 255, 255, 255, 61, 255, 255, 255, 56, 255, 255, 255, 49, 255, 255, 255, 41, 255, 255, 255, 33, 255, 255, 255, 23, 255, 255, 255, 13, 255, 255, 255, 2, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 9, 255, 255, 255, 18, 255, 255, 255, 26, 255, 255, 255, 33, 255, 255, 255, 39, 255, 255, 255, 44, 255, 255, 255, 48, 255, 255, 255, 50, 255, 255, 255, 50, 255, 255, 255, 50, 255, 255, 255, 48, 255, 255, 255, 44, 255, 255, 255, 39, 255, 255, 255, 33, 255, 255, 255, 26, 255, 255, 255, 18, 255, 255, 255, 9, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 3, 255, 255, 255, 11, 255, 255, 255, 18, 255, 255, 255, 23, 255, 255, 255, 28, 255, 255, 255, 31, 255, 255, 255, 33, 255, 255, 255, 33, 255, 255, 255, 33, 255, 255, 255, 31, 255, 255, 255, 28, 255, 255, 255, 23, 255, 255, 255, 18, 255, 255, 255, 11, 255, 255, 255, 3, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 2, 255, 255, 255, 7, 255, 255, 255, 11, 255, 255, 255, 14, 255, 255, 255, 16, 255, 255, 255, 16, 255, 255, 255, 16, 255, 255, 255, 14, 255, 255, 255, 11, 255, 255, 255, 7, 255, 255, 255, 2, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0, 255, 255, 255, 0,
		
};
GLuint g_ParticleTexture(0);

ParticleSystem::ParticleSystem(void)
{
	if(g_ParticleTexture == 0)
	{
		glGenTextures(1, &g_ParticleTexture);
		glBindTexture(GL_TEXTURE_2D, g_ParticleTexture);
		glTexImage2D(GL_TEXTURE_2D, 0, 4, 32, 32, 0, GL_RGBA, GL_UNSIGNED_BYTE, g_ParticleTextureData);
		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
	}
}

bool ParticleSystem::Update(float Seconds)
{
	if(GameTime::Get() >= m_TimeOfDeath)
	{
		return false;
	}
	else
	{
		m_Position += m_Velocity * Seconds;
		
		std::list< ParticleSystem::Particle >::iterator ParticleIterator(m_Particles.begin());
		
		while(ParticleIterator != m_Particles.end())
		{
			bool Forward(true);
			
			for(std::vector< std::string >::const_iterator ScriptLine = m_ParticleScript.begin(); ScriptLine != m_ParticleScript.end(); ++ScriptLine)
			{
				if(*ScriptLine == "kill-old")
				{
					if(GameTime::Get() >= ParticleIterator->m_TimeOfDeath)
					{
						ParticleIterator = m_Particles.erase(ParticleIterator);
						Forward = false;
						
						break;
					}
				}
				else if(*ScriptLine == "move")
				{
					ParticleIterator->m_Position += ParticleIterator->m_Velocity * Seconds;
				}
			}
			if(Forward == true)
			{
				++ParticleIterator;
			}
		}
		
		return true;
	}
}

void ParticleSystem::Draw(void)
{
	glPushMatrix();
	glTranslatef(m_Position.m_V.m_A[0], m_Position.m_V.m_A[1], 0.0f);
	glPushAttrib(GL_ENABLE_BIT);
	glDisable(GL_LIGHTING);
	glDisable(GL_DEPTH_TEST);
	glEnable(GL_BLEND);
	glBlendFunc(GL_SRC_ALPHA, GL_ONE);
	glBindTexture(GL_TEXTURE_2D, g_ParticleTexture);
	glEnable(GL_TEXTURE_2D);
	glBegin(GL_QUADS);
	for(std::list< Particle >::iterator ParticleIterator = m_Particles.begin(); ParticleIterator != m_Particles.end(); ++ParticleIterator)
	{
		glColor4fv(ParticleIterator->m_Color.GetColor().m_V.m_A);
		
		Vector2f & Position(ParticleIterator->m_Position);
		
		// TODO: billboarding
		glTexCoord2f(0.0f, 0.0f);
		glVertex2f(Position.m_V.m_A[0] - ParticleIterator->m_Size, Position.m_V.m_A[1] - ParticleIterator->m_Size);
		glTexCoord2f(1.0f, 0.0f);
		glVertex2f(Position.m_V.m_A[0] + ParticleIterator->m_Size, Position.m_V.m_A[1] - ParticleIterator->m_Size);
		glTexCoord2f(1.0f, 1.0f);
		glVertex2f(Position.m_V.m_A[0] + ParticleIterator->m_Size, Position.m_V.m_A[1] + ParticleIterator->m_Size);
		glTexCoord2f(0.0f, 1.0f);
		glVertex2f(Position.m_V.m_A[0] - ParticleIterator->m_Size, Position.m_V.m_A[1] + ParticleIterator->m_Size);
	}
	glEnd();
	glPopAttrib();
	glPopMatrix();
}

ParticleSystemHit::ParticleSystemHit(void)
{
	SetTimeOfDeath(GameTime::Get() + 3.0);
	for(int Index = 0; Index < 30; ++Index)
	{
		Particle NewParticle;
		
		NewParticle.m_Position.Set(0.0f, 0.0f);
		NewParticle.m_Velocity = Vector2f(GetRandomFloat(0.0f, 0.5f) + GetRandomFloatFromExponentialDistribution(1.0f), GetRandomFloat(0.0f, 2 * M_PI), Vector2f::InitializeMagnitudeAngle);
		NewParticle.m_TimeOfDeath = GameTime::Get() + GetRandomDouble(0.3f, 0.8f);
		NewParticle.m_Color = Color(GetRandomFloat(0.4f, 0.5f), GetRandomFloat(0.35f, 0.45f), GetRandomFloat(0.35f, 0.65f), 0.3f);
		NewParticle.m_Size = 0.5f;
		m_Particles.push_back(NewParticle);
	}
	m_ParticleScript.push_back("kill-old");
	m_ParticleScript.push_back("move");
}

ParticleSystemExplosion::ParticleSystemExplosion(void)
{
	SetTimeOfDeath(GameTime::Get() + 3.0);
	for(int Index = 0; Index < 500; ++Index)
	{
		Particle NewParticle;
		
		NewParticle.m_Position.Set(0.0f, 0.0f);
		NewParticle.m_Velocity = Vector2f(GetRandomFloat(0.0f, 2.5f) + GetRandomFloatFromExponentialDistribution(2.0f), GetRandomFloat(0.0f, 2 * M_PI), Vector2f::InitializeMagnitudeAngle);
		NewParticle.m_TimeOfDeath = GameTime::Get() + GetRandomDouble(1.0f, 2.5f);
		NewParticle.m_Color = Color(GetRandomFloat(0.4f, 0.8f), GetRandomFloat(0.2f, 0.4f), GetRandomFloat(0.05f, 0.15f), 0.5f);
		NewParticle.m_Size = 1.0f;
		m_Particles.push_back(NewParticle);
	}
	for(int Index = 0; Index < 5; ++Index)
	{
		Particle FlashParticle;
		
		FlashParticle.m_Position = Vector2f(GetRandomFloat(0.0f, 6.0f), GetRandomFloat(0.0f, 2 * M_PI), Vector2f::InitializeMagnitudeAngle);
		FlashParticle.m_Velocity.Set(0.0f, 0.0f);
		FlashParticle.m_TimeOfDeath = GameTime::Get() + GetRandomDouble(0.1f, 0.22f);
		FlashParticle.m_Color = Color(0.9f, GetRandomFloat(0.9f, 1.0f), GetRandomFloat(0.95f, 1.0f), 0.15f);
		FlashParticle.m_Size = 20.0f;
		m_Particles.push_back(FlashParticle);
	}
	
	Particle BigFlashParticle;
	
	BigFlashParticle.m_Position = Vector2f(GetRandomFloat(0.0f, 6.0f), GetRandomFloat(0.0f, 2 * M_PI), Vector2f::InitializeMagnitudeAngle);
	BigFlashParticle.m_Velocity.Set(0.0f, 0.0f);
	BigFlashParticle.m_TimeOfDeath = GameTime::Get() + GetRandomDouble(0.1f, 0.15f);
	BigFlashParticle.m_Color = Color(0.9f, GetRandomFloat(0.9f, 1.0f), GetRandomFloat(0.95f, 1.0f), 0.3f);
	BigFlashParticle.m_Size = 200.0f;
	m_Particles.push_back(BigFlashParticle);
	m_ParticleScript.push_back("kill-old");
	m_ParticleScript.push_back("move");
}
